find_package(Subversion)
if(SUBVERSION_FOUND)
	execute_process(COMMAND ${Subversion_SVN_EXECUTABLE} info ${CPACK_SVN_REP_DIR}
			OUTPUT_VARIABLE SVN_INFO_OUTPUT
			RESULT_VARIABLE SVN_INFO_RESULT
			OUTPUT_STRIP_TRAILING_WHITESPACE)
	if(${SVN_INFO_RESULT} EQUAL 0)
		string(REGEX REPLACE "^(.*\n)?Revision: ([^\n]+).*" "\\2" SVN_REP_VERSION "${SVN_INFO_OUTPUT}")
		if(${SVN_REP_VERSION} MATCHES "[0-9]+")
			set(CPACK_PACKAGE_VERSION_PATCH ${SVN_REP_VERSION})
		endif(${SVN_REP_VERSION} MATCHES "[0-9]+")
	endif(${SVN_INFO_RESULT} EQUAL 0)
endif(SUBVERSION_FOUND)
		
if(DEFINED CPACK_VER)
	string(REPLACE "." ";" PARSE_VER ${CPACK_VER})
	set(COUNT_VER 0)
	foreach(CURRENT_VER ${PARSE_VER})
		if(${COUNT_VER} EQUAL 0)
			if(NOT ${CURRENT_VER} STREQUAL "d")
				set(CPACK_PACKAGE_VERSION_MAJOR "${CURRENT_VER}")
			endif(NOT ${CURRENT_VER} STREQUAL "d")
			set(COUNT_VER 1)
		elseif(${COUNT_VER} EQUAL 1)
			if(NOT ${CURRENT_VER} STREQUAL "d")
				set(CPACK_PACKAGE_VERSION_MINOR "${CURRENT_VER}")
			endif(NOT ${CURRENT_VER} STREQUAL "d")
			set(COUNT_VER 2)
		elseif(${COUNT_VER} EQUAL 2)
			if(NOT ${CURRENT_VER} STREQUAL "d")
				set(CPACK_PACKAGE_VERSION_PATCH "${CURRENT_VER}")
			endif(NOT ${CURRENT_VER} STREQUAL "d")
		endif()
	endforeach(CURRENT_VER ${PARSE_VER})
endif(DEFINED CPACK_VER)

set(CPACK_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CPACK_SYSTEM_NAME}-${CPACK_SYSTEM_PROCESSOR}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "${CPACK_PACKAGE_INSTALL_DIRECTORY}-${CPACK_PACKAGE_VERSION}")
set(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "${CPACK_PACKAGE_INSTALL_DIRECTORY}-${CPACK_PACKAGE_VERSION}")