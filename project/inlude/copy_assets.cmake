# Функция копирования имущества
function(copy_assets)
	foreach(SUB_FOLDER ${SUB_FOLDERS})
		if(DEFINED ${PROJECT_NAME}_PECULIAR_FOLDER)
			file(MAKE_DIRECTORY ${EXECUTABLE_DIR}/${SUB_FOLDER}/${${PROJECT_NAME}_PECULIAR_FOLDER})
			file(MAKE_DIRECTORY ${EXECUTABLE_DIR}/${SUB_FOLDER}/${${PROJECT_NAME}_PECULIAR_FOLDER})
		else(DEFINED ${PROJECT_NAME}_PECULIAR_FOLDER)
			file(MAKE_DIRECTORY ${EXECUTABLE_DIR}/${SUB_FOLDER}/${SHARED_LIBRARY_DIR})
			file(MAKE_DIRECTORY ${EXECUTABLE_DIR}/${SUB_FOLDER}/${MODULE_LIBRARY_DIR})
		endif(DEFINED ${PROJECT_NAME}_PECULIAR_FOLDER)
	endforeach(SUB_FOLDER ${SUB_FOLDERS})
	
	if(DEFINED ${PROJECT_NAME}_ASSETS)
		foreach(ASSET_PATH ${${PROJECT_NAME}_ASSETS})
			if(NOT IS_ABSOLUTE ${ASSET_PATH})
				set(ASSET_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${ASSET_PATH})
			endif(NOT IS_ABSOLUTE ${ASSET_PATH})
			set(${PROJECT_NAME}_ASSETS_PATH ${${PROJECT_NAME}_ASSETS_PATH} ${ASSET_PATH})
		endforeach(ASSET_PATH ${${PROJECT_NAME}_ASSETS})
		get_property(LIST_ASSETS_PATH GLOBAL PROPERTY LIST_ASSETS_PATH)
		if(DEFINED LIST_ASSETS_PATH)
			set_property(GLOBAL APPEND PROPERTY LIST_ASSETS_PATH ${${PROJECT_NAME}_ASSETS_PATH})
		else(DEFINED LIST_ASSETS_PATH)
			set_property(GLOBAL APPEND PROPERTY LIST_ASSETS_PATH ${${PROJECT_NAME}_ASSETS_PATH})
		endif(DEFINED LIST_ASSETS_PATH)
	endif(DEFINED ${PROJECT_NAME}_ASSETS)
	get_target_property(TARGET_TYPE ${PROJECT_NAME} TYPE)
	if(${TARGET_TYPE} STREQUAL EXECUTABLE)
		get_property(LIST_ASSETS_PATH GLOBAL PROPERTY LIST_ASSETS_PATH)				
		if(DEFINED LIST_ASSETS_PATH)
			foreach(ASSET_PATH ${LIST_ASSETS_PATH})
				foreach(SUB_FOLDER ${SUB_FOLDERS})
					if(IS_DIRECTORY ${ASSET_PATH})
						#file(COPY ${ASSET_PATH} DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/debug PATTERN .svn EXCLUDE)
						file(COPY ${ASSET_PATH} DESTINATION ${EXECUTABLE_DIR}/${SUB_FOLDER} PATTERN .svn EXCLUDE)
					else(IS_DIRECTORY ${ASSET_PATH})
						get_filename_component(ASSET_NAME ${ASSET_PATH} NAME)
						set(CURRENT_ASSET_PATH CURRENT_ASSET_PATH-NOTFOUND)
						find_file(CURRENT_ASSET_PATH ${ASSET_NAME} PATHS ${EXECUTABLE_DIR}/${SUB_FOLDER} NO_DEFAULT_PATH)
						if(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
							file(COPY ${ASSET_PATH} DESTINATION ${EXECUTABLE_DIR}/${SUB_FOLDER})
						endif(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
						# set(CURRENT_ASSET_PATH CURRENT_ASSET_PATH-NOTFOUND)
						# find_file(CURRENT_ASSET_PATH ${ASSET_NAME} PATHS ${CMAKE_BINARY_DIR}/${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/release)
						# if(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
							# file(COPY ${ASSET_PATH} DESTINATION ${CMAKE_BINARY_DIR}/${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/release)
						# endif(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
					endif(IS_DIRECTORY ${ASSET_PATH})
				endforeach(SUB_FOLDER ${SUB_FOLDERS})
			endforeach(ASSET_PATH ${LIST_ASSETS_PATH})
			unset(LIST_ASSETS_PATH)
		endif(DEFINED LIST_ASSETS_PATH)
	elseif(${TARGET_TYPE} STREQUAL MODULE_LIBRARY)
			get_property(LIST_ASSETS_PATH GLOBAL PROPERTY LIST_ASSETS_PATH)
			if(DEFINED LIST_ASSETS_PATH)
				foreach(ASSET_PATH ${LIST_ASSETS_PATH})
					foreach(SUB_FOLDER ${SUB_FOLDERS})
						if(IS_DIRECTORY ${ASSET_PATH})
							file(COPY ${ASSET_PATH} DESTINATION ${EXECUTABLE_DIR}/${SUB_FOLDER} PATTERN .svn EXCLUDE)
							#file(COPY ${ASSET_PATH} DESTINATION ${EXECUTABLE_DIR_RELEASE} PATTERN .svn EXCLUDE)
						else(IS_DIRECTORY ${ASSET_PATH})
							get_filename_component(ASSET_NAME ${ASSET_PATH} NAME)
							set(CURRENT_ASSET_PATH CURRENT_ASSET_PATH-NOTFOUND)
							find_file(CURRENT_ASSET_PATH ${ASSET_NAME} PATHS ${EXECUTABLE_DIR}/${SUB_FOLDER} NO_DEFAULT_PATH)
							if(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
								file(COPY ${ASSET_PATH} DESTINATION ${EXECUTABLE_DIR}/${SUB_FOLDER})
							endif(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
							# set(CURRENT_ASSET_PATH CURRENT_ASSET_PATH-NOTFOUND)
							# find_file(CURRENT_ASSET_PATH ${ASSET_NAME} PATHS ${EXECUTABLE_DIR_RELEASE})
							# if(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
								# file(COPY ${ASSET_PATH} DESTINATION ${EXECUTABLE_DIR_RELEASE})
							# endif(${CURRENT_ASSET_PATH} STREQUAL CURRENT_ASSET_PATH-NOTFOUND)
						endif(IS_DIRECTORY ${ASSET_PATH})
					endforeach(SUB_FOLDER ${SUB_FOLDERS})
				endforeach(ASSET_PATH ${LIST_ASSETS_PATH})
				unset(LIST_ASSETS_PATH)
			endif(DEFINED LIST_ASSETS_PATH)
		#endif(DEFINED ${PROJECT_NAME}_CLIENT)
	endif(${TARGET_TYPE} STREQUAL EXECUTABLE)
    #endif(MSVC_IDE)
endfunction(copy_assets)