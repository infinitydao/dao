function(collection_doc)
	find_package(Doxygen)
	if(DOXYGEN_FOUND)
		collection_sources()
		collection_headers()
		if(${CMAKE_PROJECT_NAME} STREQUAL ${PROJECT_NAME})
			get_property(LIST_SOURCES_PATH GLOBAL PROPERTY LIST_SOURCES_PATH)
			string(REGEX REPLACE ";" "" LIST_SOURCES_PATH "${LIST_SOURCES_PATH}")
			string(REGEX REPLACE "\n" " " LIST_SOURCES_PATH "${LIST_SOURCES_PATH}")
			get_property(LIST_HEADERS_PATH GLOBAL PROPERTY LIST_HEADERS_PATH)
			string(REGEX REPLACE ";" "" LIST_HEADERS_PATH "${LIST_HEADERS_PATH}")
			string(REGEX REPLACE "\n" " " LIST_HEADERS_PATH "${LIST_HEADERS_PATH}")
			file(MAKE_DIRECTORY ${CMAKE_BINARY_DIR}/doc)
			configure_file(${ROOT_PATH}/project/templates/doxyfile.in ${CMAKE_BINARY_DIR}/doc/doxygen @ONLY)
			add_custom_target(DOXYGEN
				${DOXYGEN_EXECUTABLE} ${CMAKE_BINARY_DIR}/doc/doxygen
				WORKING_DIRECTORY ${CMAKE_BINARY_DIR}/doc
				COMMENT "Generating API documentation with Doxygen" VERBATIM
			)
		endif(${CMAKE_PROJECT_NAME} STREQUAL ${PROJECT_NAME})
	endif(DOXYGEN_FOUND)
endfunction(collection_doc)

function(collection_sources)
	foreach(SOURCE_PATH ${${PROJECT_NAME}_SOURCES})
		if(NOT IS_ABSOLUTE ${SOURCE_PATH})
			set(SOURCE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${SOURCE_PATH})
		endif(NOT IS_ABSOLUTE ${SOURCE_PATH})
		set(${PROJECT_NAME}_SOURCE_PATH "${${PROJECT_NAME}_SOURCE_PATH}\n${SOURCE_PATH}")
	endforeach(SOURCE_PATH ${${PROJECT_NAME}_SOURCES})
	get_property(LIST_SOURCES_PATH GLOBAL PROPERTY LIST_SOURCES_PATH)
	set_property(GLOBAL APPEND PROPERTY LIST_SOURCES_PATH "${${PROJECT_NAME}_SOURCE_PATH}")
endfunction(collection_sources)

function(collection_headers)
	foreach(HEADER_PATH ${${PROJECT_NAME}_HEADERS})
		if(NOT IS_ABSOLUTE ${HEADER_PATH})
			set(HEADER_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${HEADER_PATH})
		endif(NOT IS_ABSOLUTE ${HEADER_PATH})
		set(${PROJECT_NAME}_HEADER_PATH "${${PROJECT_NAME}_HEADER_PATH}\n${HEADER_PATH}")
	endforeach(HEADER_PATH ${${PROJECT_NAME}_HEADERS})
	get_property(LIST_HEADERS_PATH GLOBAL PROPERTY LIST_HEADERS_PATH)
	set_property(GLOBAL APPEND PROPERTY LIST_HEADERS_PATH "${${PROJECT_NAME}_HEADER_PATH}")
endfunction(collection_headers)